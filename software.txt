#include <U8g2lib.h>
#include "TM1637.h"
#include <WiFi.h>
#define CLK  19 //Set the CLK pin connection to the display
#define DIO  18 //Set the DIO pin connection to the display
#define ANALOG_PIN_0   32
#define NTP1  "ntp1.aliyun.com"
#define NTP2  "ntp2.aliyun.com"
#define NTP3  "ntp3.aliyun.com"

TM1637 tm1637(CLK, DIO); //set up the 4-Digit Display.
int numCounter = 0;
bool dian = false;
/***********************************************/
////填写WIFI入网信息
const char* ssid     = "好耶";     // WIFI账户
const char* password = "12345678"; // WIFI密码

void setClock() {
  struct tm timeinfo;
    if (!getLocalTime(&timeinfo))
    {//如果获取失败，就开启联网模式，获取时间
        Serial.println("Failed to obtain time");
         WiFi.disconnect(false);
        WiFi.mode(WIFI_STA);//开启网络  
       WiFi.begin(ssid, password);
         while (WiFi.status() != WL_CONNECTED)
    {
        delay(500);
        Serial.print(".");
    }
     configTime(8 * 3600, 0, NTP1, NTP2,NTP3);
        return;
    }
    
    tm1637.display(0,timeinfo.tm_hour/10);
    tm1637.display(1,timeinfo.tm_hour%10);
    tm1637.display(2,timeinfo.tm_min/10);
    tm1637.display(3,timeinfo.tm_min%10 );
    tm1637.point(!dian);                                
   WiFi.disconnect(true);
}
/********************OLED******************/
U8G2_SSD1306_128X32_UNIVISION_F_HW_I2C u8g2(U8G2_R0,U8X8_PIN_NONE);
const int WIDTH=128;
const int HEIGHT=32;
const int LENGTH=WIDTH;
int x;
int y[LENGTH];
void clearY(){           
  for(int i=0; i<LENGTH; i++){
    y[i] = -1;
  }
}
/***************波形图函数******************/
void drawY(){
  u8g2.drawPixel(0, y[0]);
  for(int i=1; i<LENGTH; i++){
    if(y[i]!=-1){
      //u8g.drawPixel(i, y[i]);
      
      u8g2.drawLine(i-1, y[i-1], i, y[i]);
    }else{
      break;
    }
  }
}     


void setup(){
  Serial.begin(115200);
 /**************数码管初始化*************************/ 
  tm1637.init();
  tm1637.point(1);//小数点开关，1为打开，0为关闭
  tm1637.set(BRIGHT_TYPICAL);
/********************************************************************/
  pinMode(ANALOG_PIN_0,INPUT_PULLUP);//模数转换引脚
/********pwm配置**************/  
  ledcSetup(0,5000,8);
  ledcAttachPin(2,0);
/***********oled***************/
u8g2.begin();
x = 0;
clearY();

/*******************wifi初始化*****************/
    Serial.println();
// 设置ESP32工作模式为无线终端模式
 WiFi.mode(WIFI_STA);
 WiFi.begin(ssid, password);
    while (WiFi.status() != WL_CONNECTED)
    {
        delay(500);
        Serial.print(".");
    }
    Serial.println("WiFi connected!");
 configTime(8 * 3600, 0, NTP1, NTP2,NTP3);
      setClock();
//     从网络时间服务器上获取并设置时间
//     获取成功后芯片会使用RTC时钟保持时间的更新 
    WiFi.disconnect(true);
    WiFi.mode(WIFI_OFF);//关闭网络
    Serial.println("WiFi disconnected!");

}


void loop() {
 /***********输出磁场信号*********************/
  int analog_value = 0;
  analog_value = analogRead(ANALOG_PIN_0);
  
/*******波形显示******************/
  y[x] = map(analog_value, 0, 4095, HEIGHT-1, 0);
  Serial.write(y[x]);
  u8g2.firstPage();  
  do {
    drawY();
  } while( u8g2.nextPage() );
  
  //delay(5);

  x++;
  if(x >= WIDTH){
    x = 0;
    clearY();
  }
  int PWM = map(analog_value,0,4095,0,255);
  digitalWrite(4,LOW);
  digitalWrite(15,HIGH);
  ledcWrite(0,PWM);
  
  /*******************数码管**************/
 setClock();

  
}